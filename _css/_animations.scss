@use "sass:math";

.logo-image {
  $logo_image_padding: 10px;
  perspective: 600px;
  padding: $logo_image_padding; /* important to prevent mis-alignment. also change image-back position if modified */
  .logo-image-back, .logo-image-front{
    transition: transform 0.7s;
    -webkit-transform-style: preserve-3d;
    transform-style: preserve-3d;
    -webkit-backface-visibility: hidden;
    backface-visibility: hidden;
  }
  .logo-image-back{
    position: absolute;
    top: $logo_image_padding;
    left: $logo_image_padding;
    bottom: $logo_image_padding;
    right: $logo_image_padding;
    -webkit-transform: rotateY( -180deg );
    transform: rotateY( -180deg );
  }
  &:hover .logo-image-back{
    -webkit-transform: rotateY( 0deg );
    transform: rotateY( 0deg );
  }
  &:hover .logo-image-front{
    -webkit-transform: rotateY( 180deg );
    transform: rotateY( 180deg );
  }
}

.flip-box {
  perspective: 1500px; /* Remove this if you don't want the 3D effect */
  display: flex;
  flex-direction: column;
  justify-content: space-around;
  align-items: center;

  .flip-box-inner, .flip-box-inner-left  {
    background-color: transparent;
    transition: all 0.8s;
    transform-style: preserve-3d;
    box-shadow: 0 0 10px rgba(0, 0, 0, 0.5);;
    margin-bottom: 20px;
  }

  .flip-box-inner:hover {
    box-shadow: -10px 10px 40px rgba(0, 0, 0, 0.7);
    transform: scale(1.15) rotateY(15deg);
    margin-bottom: 40px;
  }

  .flip-box-inner-left:hover {
    box-shadow: -10px 10px 40px rgba(0, 0, 0, 0.7);
    transform: scale(1.15) rotateY(-15deg);
    margin-bottom: 40px;
  }
}

.fade_404 {
  animation: 20s ease-out 0s 1 RUlost;
}
@keyframes RUlost {
  0% {
    display: none;
    opacity: 0;
  }
  20% {
      display: block;
      opacity: 0;
  }
  50% {
    display: block;
    opacity: 0.2;
  }
  100% {
      display: block;
      opacity: 1;
  }
}

@keyframes turn {
  from { transform: rotate3d(0, 0, 0, 0); }
  to { transform: rotate3d(1, 1, 0, 360deg); }
}

.cube-contain{
  $size: 5vw;
  width: $size;
  height: $size;
  perspective: 600px;
  margin-top: $size*1.2;
  z-index: 100;
  @include media-breakpoint-down(xl){
    width: $size*2;
    height: $size*2;
    margin-top: $size*2*1.2;
  }
  .cube {
    position: relative;
    width: $size;
    height: $size;
    transform-style: preserve-3d;
    transform: rotate3d(1, 1, 0, 45deg);
    animation: turn 10s linear infinite;
    @include media-breakpoint-down(xl){
      width: $size*2;
      height: $size*2;
    }
    
    .cube-face{
      width: $size;
      height: $size;
      position: absolute;
      display: flex;
      align-items: center;
      justify-content: center;
      @include media-breakpoint-down(xl){
        width: $size*2;
        height: $size*2;
      }
    }
    .cube-front {
      background: $blue;
      transform: translateZ(math.div($size,2));
      @include media-breakpoint-down(xl){
        transform: translateZ($size);
      }
    }
    .cube-back {
      background: $blue;
      transform: translateZ(math.div(-$size,2)) rotateY(180deg);
      @include media-breakpoint-down(xl){
        transform: translateZ(-$size) rotateY(180deg);
      }
    }
    .cube-left {
      background: $light-blue;
      transform: translateX(math.div(-$size,2)) rotateY(-90deg);
      @include media-breakpoint-down(xl){
        transform: translateX(-$size) rotateY(-90deg);
      }
    }
    .cube-right {
      background: $dark-blue;
      transform: translateX(math.div($size,2)) rotateY(90deg);
      @include media-breakpoint-down(xl){
        transform: translateX($size) rotateY(90deg);
      }
    }
    .cube-top {
      background: $light-blue;
      transform: translateY(math.div(-$size,2)) rotateX(90deg);
      @include media-breakpoint-down(xl){
        transform: translateY(-$size) rotateX(90deg);
      }
    }
    .cube-bottom {
      background: $dark-blue;
      transform: translateY(math.div($size,2)) rotateX(-90deg);
      @include media-breakpoint-down(xl){
        transform: translateY($size) rotateX(-90deg);
      }
    }
  }
}

@keyframes spin { 
  from { 
      transform: rotate(0deg); 
  } to { 
      transform: rotate(360deg); 
  }
}

.spin{
  animation: spin 10s linear infinite;
}
