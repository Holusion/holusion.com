name: Build website
on: [push]
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        lfs: true
    - name: Install puppeteer dependencies
      run: |
        sudo apt-get install -yqq libgconf-2-4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: .ruby-version

    - name: bundler cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-gems-${{ hashFiles('**/Gemfile.lock') }}
        restore-keys: |
          ${{ runner.os }}-gems-
    
    - name: install nodejs
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'
      
    - name: npm cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: user cache
      id: user-cache-folder
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-user-cache
        restore-keys: |
          ${{ runner.os }}-user-cache
      
    - name: install ffmpeg
        #ffmpeg-static will cache binaries in ~/.cache/ffmpeg-static
      run: |
        mkdir -p "$HOME/.cache"
        chmod 777 "$HOME/.cache"
        npm install --no-save ffmpeg-static
        echo "::add-path::$GITHUB_WORKSPACE/node_modules/ffmpeg-static"
        test -x "$HOME/.cache/phpunit" || curl -sSL -o "$HOME/.cache/phpunit" "https://phar.phpunit.de/phpunit-6.phar"
        chmod +x "$HOME/.cache/phpunit"

    - name: create _deploy.yml config file
      env: 
        RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
      run: |
        echo "env: production" > _deploy.yml
        echo "url: https://holusion.com" >> _deploy.yml
        echo "build_id: '$GITHUB_RUN_ID'" >> _deploy.yml
        echo "snipcart_api_key: 'MTA0ZmUzN2EtNGFlZS00NjZkLWFiZDktM2RlNzUyODgzMDBhNjM2MTQzNjEyNzYwNDkzMDM2'" >> _deploy.yml
        echo "recaptcha_secret: '$RECAPTCHA_SECRET'" >> _deploy.yml
        echo "recaptcha_public: '6Lctxz0UAAAAABSHCOl3jWxLHt3hLRJfhkR-j8Ju'" >> _deploy.yml
    - name: get dependencies
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle config set with 'test'
        bundle install --jobs 4 --retry 3
        npm ci
    - name: build
      run: |
        ./build.sh
    - name: test
      run: |
        echo "PATH : $PATH"
        ./build.sh --no-build -t
        ./build.sh --no-build -i local -e

    - name: deploy built website
      if: github.ref == 'refs/heads/master'
      env:
        DEPLOY_TARGET: ${{ secrets.DEPLOY_TARGET }}
        DEPLOY_KEY: ${{ secrets.DEPLOY_KEY }}
      run: |
        mkdir ~/.ssh
        echo "$DEPLOY_KEY" > ~/.ssh/key
        chmod 600 ~/.ssh/key
        rsync -avz --delete-after -e "ssh -i ~/.ssh/key -o StrictHostKeyChecking=no" "_site/" "$DEPLOY_TARGET"
