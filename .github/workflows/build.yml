name: Build website
on:
  pull_request:
  push:
    branches:
      - master
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        lfs: true
    - name: Install puppeteer dependencies
      run: |
        sudo apt-get install -yqq libgconf-2-4

    - name: Set up Ruby
      uses: ruby/setup-ruby@v1
      with:
        ruby-version: .ruby-version

    # Caches
    - name: bundler cache
      uses: actions/cache@v1
      with:
        path: vendor/bundle
        key: ${{ runner.os }}-${{ hashFiles( '.ruby-version' ) }}-gems-${{ hashFiles( '**/Gemfile.lock' ) }}
      # require strict cache hit, otherwise we get some Illegal Instruction errors

    - name: install nodejs
      uses: actions/setup-node@v1
      with:
        node-version: '10.x'

    - name: npm cache
      uses: actions/cache@v1
      with:
        path: ~/.npm
        key: ${{ runner.os }}-node-${{ hashFiles('**/package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-node-
    - name: user cache
      id: user-cache-folder
      uses: actions/cache@v1
      with:
        path: ~/.cache
        key: ${{ runner.os }}-user-cache
        restore-keys: |
          ${{ runner.os }}-user-cache

    # Dependencies
    - name: install ffmpeg
        #ffmpeg-static will cache binaries in ~/.cache/ffmpeg-static
      run: |
        mkdir -p "$HOME/.cache"
        chmod 777 "$HOME/.cache"
        npm install --no-save ffmpeg-static
        echo "$GITHUB_WORKSPACE/node_modules/ffmpeg-static" >> $GITHUB_PATH

    - name: get gem dependencies
      run: |
        gem install bundler
        bundle config path vendor/bundle
        bundle config set with 'test'
        bundle install --jobs 4 --retry 3
    - name: get npm dependencies
      run:
        npm ci

    # Build
    - name: create _deploy.yml config file
      env:
        RECAPTCHA_SECRET: ${{ secrets.RECAPTCHA_SECRET }}
      run: |
        echo "env: production" > _deploy.yml
        echo "url: https://holusion.com" >> _deploy.yml
        echo "build_id: '$GITHUB_RUN_ID'" >> _deploy.yml
        echo "snipcart_api_key: 'MTA0ZmUzN2EtNGFlZS00NjZkLWFiZDktM2RlNzUyODgzMDBhNjM2MTQzNjEyNzYwNDkzMDM2'" >> _deploy.yml
    - name: build
      run: |
        ./build.sh
    - name: test
      run: |
        echo "PATH : $PATH"
        ./build.sh --no-build -t
        ./build.sh --no-build -i local -e

    # Deploy strategies
    - name: deploy preview channel
      if: ${{ github.event_name == 'pull_request' }}
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_ACCOUNT_KEY }}"
        expires: 30d
        projectId: holusion-com
      env:
        FIREBASE_CLI_PREVIEWS: hostingchannels

    - name: deploy built website
      if: ${{ github.ref == 'refs/heads/master' }}
      uses: FirebaseExtended/action-hosting-deploy@v0
      with:
        repoToken: "${{ secrets.GITHUB_TOKEN }}"
        firebaseServiceAccount: "${{ secrets.FIREBASE_ACCOUNT_KEY }}"
        projectId: holusion-com
        channelId: live
